- Class: meta
  Course: Statistics using R
  Lesson: Descriptive Statistics
  Author: Sathish G
  Type: Standard
  Organization: RVSIMSR
  Version: 2.4.4

- Class: text
  Output: "Welcome to \"Statistics using R\" course !! The main objective of the course is to provide the students with the skills to use R for processing and analyzing quantitative data and to coach the students to process data and generate statistics for testing for differences between variables."

- Class: text 
  Output: "In this lesson, we will load the data (as a tibble) and perform 1. Type Conversions, 2. Labelling, 3. Dealing with Missing Values, 4. Data Types, 5. Descriptive Statistics and Charts (Bar chart, Scatter Plot and Histogram)." 

- Class: cmd_question
  Output: As a first step towards our analysis, let us add a dataset called 'arbuthnot'.
  CorrectAnswer: data(arbuthnot)
  AnswerTests: any_of_exprs('data("arbuthnot")', 'data(arbuthnot)')
  Hint: Type data(arbuthnot) and press Enter.

- Class: text 
  Output: "The Arbuthnot data set refers to Dr. John Arbuthnot, an 18th century physician, writer, and mathematician. He was interested in the ratio of newborn boys to newborn girls, so he gathered the baptism records for children born in London for every year from 1629 to 1710."

- Class: cmd_question
  Output: We can take a look at the data by typing its name into the console.
  CorrectAnswer: arbuthnot
  AnswerTests: any_of_exprs('arbuthnot')
  Hint: Type arbuthnot and press Enter.

- Class: text
  Output: "However printing the whole dataset in the console is not that useful. One advantage of RStudio is that it comes with a built-in data viewer. Click on the name `arbuthnot` in the Environment pane (upper right window) that lists the objects in your workspace. This will bring up an alternative display of the data set in the Data Viewer (upper left window). You can close the data viewer by clicking on the x in the upper lefthand corner"

- Class: cmd_question
  Output: Go on and click the arbuthnot data set from the global environment data pane.
  CorrectAnswer: View(arbuthnot)
  AnswerTests: any_of_exprs('View(arbuthnot)','view(arbuthnot)')
  Hint: Type View(arbuthnot) and press Enter.

- Class: text
  Output: "Now, in the dataset, What you should see are four columns of numbers, each row representing a different year; the first entry in each row is simply the row number (an index we can use to access the data from individual years if we want), the second is the year, and the third and fourth are the numbers of boys and girls baptized that year, respectively"

- Class: text
  Output: "Note that the row numbers in the first column are not part of Arbuthnot's data. R adds them as part of its printout to help you make visual comparisons. You canthink of them as the index that you see on the left side of a spreadsheet. In fact, the comparison to a spreadsheet will generally be helpful. R has stored Arbuthnot's data in a kind of spreadsheet or table called a data frame."

- Class: cmd_question
  Output: You can see the dimensions of this data frame by typing dim(arbuthnot)
  CorrectAnswer: dim(arbuthnot)
  AnswerTests: any_of_exprs('dim(arbuthnot)')
  Hint: Type dim(arbuthnot) and press Enter.

- Class: text
  Output: "This command should output `[1] 82 3`, indicating that there are 82 rows and 3 columns (we'll get to what the `[1]` means in a bit), just as it says next to the object in your workspace"

- Class: cmd_question
  Output: You can see the names of these columns (or variables) by typing names(arbuthnot)
  CorrectAnswer: names(arbuthnot)
  AnswerTests: any_of_exprs('names(arbuthnot)')
  Hint: Type names(arbuthnot) and press Enter.
  
- Class: mult_question
  Output: How many variables are included in this data set? 
  CorrectAnswer: 3
  AnswerChoices: 2; 3; 4; 82; 1710
  AnswerTests: omnitest(correctVal='3')
  Hint: 'Variables are the labels of each column. Do not count the first printout like column with row numbers as a variable.'

- Class: text
  Output: "Now, let's find what are the years that are included in the dataset.? "
  
- Class: cmd_question
  Output: You can take a look at the year variable in the Data Viewer to answer this question. However, I would recommend you to use count() to answer this question.
  CorrectAnswer: count(arbuthnot, year)
  AnswerTests: any_of_exprs('count(arbuthnot, year)')
  Hint: Type count(arbuthnot, year) and press Enter.
  
- Class: text
  Output: "You should see that the data frame contains the columns `year`,  `boys`, and `girls`. At this point, you might notice that many of the commands in R look a lot like functions from math class; that is, invoking R commands means supplyinga function with some number of arguments. The `dim` and `names` commands, for example, each took a single argument, the name of a data frame."

- Class: text
  Output: "Let's start to examine the data a little more closely."

- Class: cmd_question
  Output: We can access the data in a single column of a data frame separately using a command like arbuthnot$boys
  CorrectAnswer: arbuthnot$boys
  AnswerTests: any_of_exprs('arbuthnot$boys')
  Hint: Type arbuthnot$boys and press Enter.

- Class: text
  Output: "This command will only show the number of boys baptized each year. The dollarsign basically says 'go to the data frame that comes before me, and find the variable that comes after me'"

- Class: mult_question
  Output: What command would you use to extract just the counts of girls born? 
  CorrectAnswer: arbuthnot$girls
  AnswerChoices: arbuthnot$girls; arbuthnot$boys; girls; arbuthnot[girls]; $girls
  AnswerTests: omnitest(correctVal='arbuthnot$girls')
  Hint: 'Remember how we accessed the single column boys from the data frame.'

- Class: figure
  Output: R has some powerful functions for making graphics. We can create a simple plot of the number of girls baptized per year with the command "ggplot(data = arbuthnot, aes(x = year, y = girls)) + geom_point()"
  Figure: draw.R
  FigureType: new

- Class: text
  Output: "Before we review the code for this plot, let's summarize the trends we see in the data."
  
- Class: mult_question
  Output: Which of the following best describes the number of girls baptised over the years included in this dataset?
  AnswerChoices: There appears to be no trend in the number of girls baptised from 1629 to 1710;There is initially an increase in the number of girls baptised, which peaks around 1640. After 1640 there is a decrease in the number of girls baptised, but the number begins to increase again in 1660. Overall the trend is an increase in the number of girls baptised.;There is initially an increase in the number of girls baptised. This number peaks around 1640 and then after 1640 the number of girls baptised decreases.;The number of girls baptised has decreased over time;There is an initial increase in the number of girls baptised but this number appears to level around 1680 and not change after that time point.
  CorrectAnswer: There is initially an increase in the number of girls baptised, which peaks around 1640. After 1640 there is a decrease in the number of girls baptised, but the number begins to increase again in 1660. Overall the trend is an increase in the number of girls baptised.
  AnswerTests: omnitest(correctVal='There is initially an increase in the number of girls baptised, which peaks around 1640. After 1640 there is a decrease in the number of girls baptised, but the number begins to increase again in 1660. Overall the trend is an increase in the number of girls baptised.')
  Hint: 'Look at the plot to answer this question'
  
- Class: text
  Output: "Back to the code... We use the `ggplot()` function to build plots. If you run the plotting code in your console, you should see the plot appear under the *Plots* tab of the lower right panel of RStudio. Notice that the command above again looks like a function, this time with arguments separated by commas. "

- Class: text
  Output: "- The first argument is always the dataset. - Next, we provide thevariables from the dataset to be assigned to `aes`thetic elements of the plot, e.g. the x and the y axes. - Finally, we use another layer, separated by a `+` to specify the `geom`etric object for the plot. Since we want to scatterplot, we use `geom_point`."

- Class: cmd_question
  Output: You might wonder how you are supposed to know the syntax for the `ggplot` function. Thankfully, R documents all of its functions extensively. To read what a function does and learn the arguments that are available to you, just type in a question mark followed by the name of the function that you're interested in. Try the following in your console- ?ggplot
  CorrectAnswer: ?ggplot
  AnswerTests: any_of_exprs('?ggplot')
  Hint: Type ?ggplot and press Enter.

- Class: text
  Output: "Notice that the help file replaces the plot in the lower right panel. You can toggle between plots and help files using the tabs at the top of that panel. "

- Class: text
  Output: "Now, suppose we want to plot the total number of baptisms. To compute this, we could use the fact that R is really just a big calculator. We can type in mathematical expressions like `5218 + 4683`"

- Class: cmd_question
  Output: Go ahead and type 5218 + 4683 in the console.
  CorrectAnswer: 5218 + 4683
  AnswerTests: any_of_exprs('5218 + 4683','5218+4683','5218 +4683','5218+ 4683')
  Hint: Type 5218 + 4683 and press Enter.

- Class: cmd_question
  Output: to see the total number of baptisms in 1629. We could repeat this once for each year, but there is a faster way. If we add the vector for baptisms for boys to that of girls, R will compute all sums simultaneously.
  CorrectAnswer: arbuthnot$boys + arbuthnot$girls
  AnswerTests: any_of_exprs('arbuthnot$boys + arbuthnot$girls','arbuthnot$boys+arbuthnot$girls','arbuthnot$boys+ arbuthnot$girls','arbuthnot$boys +arbuthnot$girls')
  Hint: Type arbuthnot$boys + arbuthnot$girls and press Enter.

- Class: text
  Output: "What you will see are 82 numbers (in that packed display, because we aren’t looking at a data frame here), each one representing the sum we’re after. Take a look at a few of them and verify that they are right."

- Class: text
  Output: "Now, let's add a new variable."

- Class: cmd_question
  Output: Go ahead and add a new variable called as `total` and assign it with the value of `boys + girls`
  CorrectAnswer: mutate(arbuthnot, total = boys + girls)
  AnswerTests: any_of_exprs('mutate(arbuthnot, total = boys + girls)','arbuthnot %>% mutate(total = boys + girls)')
  Hint: Type mutate(arbuthnot, total = boys + girls) and press Enter.
  
- Class: text
  Output: "We'll be using this new vector to generate some plots, so we'll want to save it as a permanent column in our data frame."

- Class: cmd_question
  Output: Go ahead and assign the result of your previous statement `mutate(arbuthnot, total = boys + girls)` to the same dataset `arbuthnot` 
  AnswerTests: any_of_exprs('arbuthnot <- mutate(arbuthnot, total = boys + girls)','arbuthnot <- arbuthnot %>% mutate(total = boys + girls)')
  Hint: Type arbuthnot <- mutate(arbuthnot, total = boys + girls) and press Enter.

- Class: text
  Output: "What in the world is going on here? The `%>%` operator is called the `piping` operator. Basically, it takes the output of the current line and pipes it into the following line of code."

- Class: text
  Output: "Where is the new variable? When you make changes to variables in your dataset, click on the name of the dataset again to update it in the data viewer."

- Class: text
  Output: "You'll see that there is now a new column called `total` that has been tacked on to the data frame. The special symbol `<-` performs an *assignment*, taking the output of one line of code and saving it into an object in your workspace. In this case, you already have an object called `arbuthnot`, so this command updates that data set with the new mutated column."
  
- Class: text
  Output: "We can make a plot of the total number of baptisms per year with the following command. ggplot(data = arbuthnot, aes(x = year, y = total)) + geom_line()"

- Class: cmd_question
  Output: Go ahead and create the plot yourself and see it. 
  AnswerTests: any_of_exprs('ggplot(data = arbuthnot, aes(x = year, y = total)) + geom_line()')
  Hint: Type ggplot(data = arbuthnot, aes(x = year, y = total)) + geom_line() and press Enter.

- Class: cmd_question
  Output: Note that using `geom_line()` instead of `geom_point()` results in a line plot instead of a scatter plot. You want both? Just layer them on using '+' and the function you want to layer upon. For example- ggplot(data = arbuthnot, aes(x = year, y = total)) + geom_line() + geom_point()
  AnswerTests: any_of_exprs('ggplot(data = arbuthnot, aes(x = year, y = total)) + geom_line() + geom_point()')
  Hint: Type ggplot(data = arbuthnot, aes(x = year, y = total)) + geom_line() + geom_point() and press Enter.

- Class: cmd_question
  Output: Now, generate a plot of the proportion of boys born over time. What do you see? 
  AnswerTests: any_of_exprs('ggplot(data = arbuthnot, aes(x = year, y = boys)) + geom_point() + geom_line()', 'ggplot(data = arbuthnot, aes(x = year, y = boys)) + geom_point()','ggplot(data = arbuthnot, aes(x = year, y = boys)) + geom_line()')
  Hint: Type ggplot(data = arbuthnot, aes(x = year, y = total)) + geom_point() and press Enter. You could also use geom_line() or both layers as you wish.

- Class: text
  Output: "Finally, in addition to simple mathematical operators like subtraction and division, you can ask R to make comparisons like greater than, `>`, less than, `<`, and equality, `==`. For example, we can ask if boys outnumber girls in each year with the expression arbuthnot <- arbuthnot %>% mutate(more_boys = boys > girls)"

- Class: cmd_question
  Output: Go ahead and type the mutate query and see the result. Do not forget to store the result dataframe back to arbuthnot variable.
  AnswerTests: any_of_exprs('arbuthnot <- arbuthnot %>% mutate(more_boys = boys > girls)')
  Hint: Type arbuthnot <- arbuthnot %>% mutate(more_boys = boys > girls) and press Enter.

- Class: text
  Output: "This command add a new variable to the `arbuthnot` data frame containing the values of either `TRUE` if that year had more boys than girls, or `FALSE` if that year did not (the answer may surprise you). This variable contains different kind of data than we have considered so far. All other columns in the `arbuthnot` data frame have values are numerical (the year, the number of boys and girls). Here, we've asked R to create *logical* data, data where the values are either `TRUE` or `FALSE`. In general, data analysis will involve many different kinds of data types, and one reason for using R is that it is able to represent and compute with many of them."

- Class: text
  Output: "In the previous few pages, you recreated some of the displays and preliminary analysis of Arbuthnot's baptism data. Next you will do a similar analysis,  but for present day birth records in the United States."

- Class: cmd_question
  Output: Load up the present day data.
  AnswerTests: any_of_exprs('data(present)')
  Hint: Type data(present) and press Enter.
  
- Class: text
  Output: "The data are stored in a data frame called `present` which should now be loaded in your workspace."

- Class: cmd_question
  Output: Look at the dimensions of the dataset.
  AnswerTests: any_of_exprs('dim(present)')
  Hint: Type dim(present) and press Enter.

- Class: cmd_question
  Output: View the head of the dataset.
  AnswerTests: any_of_exprs('head(present)')
  Hint: Type head(present) and press Enter.

- Class: cmd_question
  Output: Look at the names of the variables in the dataset.
  AnswerTests: any_of_exprs('names(present)')
  Hint: Type names(present) and press Enter.

- Class: mult_question
  Output: How many variables are included in this data set? 
  CorrectAnswer: arbuthnot$girls
  AnswerChoices: 2; 3; 4; 74; 2013
  AnswerTests: omnitest(correctVal='3')
  Hint: 'Remember- You can tell count of the number of variables used by looking at the dimensions'

- Class: cmd_question
  Output: What years are included in this dataset?
  AnswerTests: any_of_exprs('range(present$year)')
  Hint: Use the `range` function and `present$year` as its argument.

- Class: cmd_question
  Output: Calculate the total number of births for each year and store these values in a new variable called `total` in the `present` dataset.
  AnswerTests: any_of_exprs('present <- present %>% mutate(total = boys + girls)', 'present <- mutate(present, total = boys + girls)')
  Hint: Use the mutate function to create a new column total and assign it with a value of boys + girls.

- Class: cmd_question
  Output: Now, calculate the proportion of boys born each year and store these values in a new variable called `prop_boys` in  the same dataset.
  AnswerTests: any_of_exprs('present <- present %>% mutate(prop_boys = boys/total)', 'present <- mutate(present, prop_boys = boys/total)')
  Hint: You can calculate proportion of boys by taking boys column and dividing it with the total number of boys + girls. i.e., total column.

- Class: cmd_question
  Output: Plot these values over time
  AnswerTests: any_of_exprs('ggplot(data = present, aes(x = year, y = prop_boys)) + geom_point()','ggplot(data = present, aes(x = year, y = prop_boys)) + geom_point() + geom_smooth()','ggplot(data = present, aes(x = year, y = prop_boys)) + geom_line()','ggplot(data = present, aes(x = year, y = prop_boys)) + geom_line() + geom_point()','ggplot(data = present, aes(x = year, y = prop_boys)) + geom_point() + geom_line()')
  Hint: Use ggplot() to plot the prop_boys over year.

- Class: mult_question
  Output: based on the plot determine if the following statement is true or false- The proportion of boys born in the US has decreased over time.  
  CorrectAnswer: True
  AnswerChoices: True; False
  AnswerTests: omnitest(correctVal='True')
  Hint: 'Refer the plot you plotted above to answer this question.'

- Class: cmd_question
  Output: Create a new variable called `more_boys` which contains the value of either `TRUE` if that year had more boys than girls, or `FALSE` if that year did not.
  AnswerTests: any_of_exprs('present <- present %>% mutate(more_boys = boys > girls)','present <- mutate(present, more_boys = boys > girls)')
  Hint: Remember how you've created more_boys variable in arbuthnot dataset.

- Class: mult_question
  Output: Based on the newly created variable `more_boys` which of the following statements is true? 
  AnswerChoices: Every year there are more girls born than boys; Every year there are more boys born than girls; Half of the years there are more boys born, and the other half more girls born
  AnswerTests: omnitest(correctVal='Every year there are more boys born than girls')
  Hint: 'You can look at the 74 observations or you can count the number of TRUE or calculate the proportion of TRUEs'

- Class: cmd_question
  Output: Calculate the boy-to-girl ratio each year, and store these values in a new variable called `prop_boy_girl` in the `present` dataset.
  AnswerTests: any_of_exprs('present <- present %>% mutate(prop_boy_girl = boys/girls)','present <- mutate(present, prop_boy_girl = boys/girls)')
  Hint: Mutate a new variable with a value of boys/girls

- Class: cmd_question
  Output: Plot the newly created variable prop_boy_girl values over time.
  AnswerTests: any_of_exprs('ggplot(data = present, aes(x = year, y = prop_boy_girl)) + geom_point()','ggplot(data = present, aes(x = year, y = prop_boy_girl)) + geom_line()','ggplot(data = present, aes(x = year, y = prop_boy_girl)) + geom_point() + geom_line()','ggplot(data = present, aes(x = year, y = prop_boy_girl)) + geom_point() + geom_smooth()')
  Hint: Use ggplot() to plot newly created column prop_boy_girl over time.

- Class: mult_question
  Output: Based on the above plot, Which of the following best describes the trend?
  AnswerChoices: There appears to be no trend in the boy-to-girl ratio from 1940 to 2013; There is initially an increase in boy-to-girl ratio, which peaks around 1960. After 1960 there is a decrease in the boy-to-girl ratio, but the number begins to increase in the mid 1970s; There is initially a decrease in the boy-to-girl ratio, and then an increase between 1960 and 1970, followed by a decrease; The boy-to-girl ratio has increased over time; There is an initial decrease in the boy-to-girl ratio born but this number appears to level around 1960 and remain constant since then
  AnswerTests: omnitest(correctVal='There is initially a decrease in the boy-to-girl ratio, and then an increase between 1960 and 1970, followed by a decrease')
  Hint: 'Look at plot you created recently to answer this question.'

- Class: cmd_question
    Output: How to anwer the question, In what year did we see the most total number of births in the U.S.?
  AnswerTests: any_of_exprs('arrange(present, desc(total))')
  Hint: Sort your dataset in descending order based on the `total` column. You can also do this interactively in the data viewer by clicking on the arrows next to the variable names.

- Class: mult_question
  Output: In what year did we see the most total number of births in the U.S.?
  AnswerChoices: 1940; 1957; 1961; 1991; 2007
  AnswerTests: omnitest(correctVal='2007')

- Class: text
  Output: "Now, that was it!! Hope you enjoyed the first lesson students. Please proceed to submit your log summary of the lesson to me for evaluation. You can take this course as many times as you wish and do not forget to make your submission. See you in the next lesson.s"

- Class: mult_question
  Output: Would you like to submit the log of this lesson to Google Forms so that your instructor may evaluate your progress?
  AnswerChoices: Yes;No
  CorrectAnswer: NULL
  AnswerTests: submit_log()
  Hint: hint
